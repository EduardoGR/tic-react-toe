{"version":3,"sources":["utils.js","constants.js","square.js","board.js","tic-tac-toe.js","index.js"],"names":["calculateWinner","squares","winningLine","filter","_winningLine","Object","slicedToArray","a","b","c","length","index","pop","BOARD_SIZE_THREE","square","isBoardFilled","injectSheet","background","border","float","font-size","font-weight","line-height","height","margin-right","margin-top","padding","text-align","width","&:focus","outline","_ref","onClick","value","classes","react_default","createElement","className","Board","cellIndex","_this","this","key","props","board","items","row","size","column","push","renderSquare","boardRow","React","Component","&:after","clear","content","display","TicTacToe","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","stepNumber","xIsNext","step","setState","winner","getNextPlayer","i","slice","concat","_this2","current","status","getStatus","movementsHistory","map","move","desc","li","jumpTo","game","src_board","handleClick","gameInfo","ol","font","margin","flex-direction","margin-left","margin-bottom","padding-left","ReactDOM","render","tic_tac_toe","document","getElementById"],"mappings":"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","file":"static/js/main.319ebf45.chunk.js","sourcesContent":["import {BOARD_SIZE_THREE, RESULT_DRAW} from './constants.js'\n\n\nconst isBoardFilled = (squares) => {\n    return squares.filter(square => {\n        return square != null\n    }).length === BOARD_SIZE_THREE * BOARD_SIZE_THREE;\n}\n\nexport const calculateWinner = (squares) => {\n    const winningLines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    const winningLine = winningLines.filter(winningLine => {\n        const [a, b, c] = winningLine;\n        return squares[a] && squares[a] === squares[b] && squares[a] === squares[c];\n    });\n\n    if (winningLine.length !== 0) {\n        let index = winningLine.pop().pop()\n        return squares[index];\n    } else if (isBoardFilled(squares)) {\n        return RESULT_DRAW;\n    } else {\n        return null;\n    }\n};","\nexport const PLAYER_X = 'X';\nexport const PLAYER_O = 'O';\nexport const BOARD_SIZE_THREE = 3;\nexport const RESULT_DRAW = 'DRAW';","import React from 'react';\nimport injectSheet from 'react-jss'\n\nconst stylesheet = {\n    square: {\n        'background': '#fff',\n        'border': '1px solid #999',\n        'float': 'left',\n        'font-size': '24px',\n        'font-weight': 'bold',\n        'line-height': '34px',\n        'height': '34px',\n        'margin-right': '-1px',\n        'margin-top': '-1px',\n        'padding': '0',\n        'text-align': 'center',\n        'width': '34px',\n        '&:focus': {\n            'outline': 'none',\n            'background': '#ddd',\n        },\n    },\n}\n\nconst Square = ({onClick, value, classes}) =>\n    <button \n        className={classes.square}\n        onClick={onClick}\n    >\n        {value}\n    </button>;\n\nexport default injectSheet(stylesheet)(Square)","import React from 'react';\nimport injectSheet from 'react-jss'\nimport Square from './square.js'\n\nconst stylesheet = {\n    boardRow: {\n        '&:after': {\n            'clear': 'both',\n            'content': '',\n            'display': 'table',\n        },\n    },\n}\n\nclass Board extends React.Component {\n    renderSquare(cellIndex) {\n        return (\n            <Square\n                key={cellIndex}\n                value={this.props.squares[cellIndex]}\n                onClick={() => this.props.onClick(cellIndex)}\n            />\n        );\n    }\n\n    render() {\n        let board = [];\n        let items = [];\n        let cellIndex;\n        for (let row = 0; row < this.props.size; ++row) {\n            for (let column = 0; column < this.props.size; ++column) {\n                cellIndex = column + row * this.props.size;\n                items.push(this.renderSquare(cellIndex));\n            }\n            board.push(<div key={row} className={this.props.classes.boardRow}>{items}</div>)\n            items = []\n        }\n        return <div>{board}</div>;\n    }\n}\n\nexport default injectSheet(stylesheet)(Board)\n","import React from 'react';\nimport injectSheet from 'react-jss'\nimport {PLAYER_O, PLAYER_X, BOARD_SIZE_THREE, RESULT_DRAW} from './constants.js'\nimport {calculateWinner} from './utils.js'\nimport Board from './board.js'\n\nconst stylesheet = {\n    game: {\n        'font': '14px \"Century Gothic\", Futura, sans-serif',\n        'margin': '20px',\n        'display': 'flex',\n        'flex-direction': 'row',\n    },\n    gameInfo: {\n        'margin-left': '20px',\n    },\n    status: {\n        'margin-bottom': '10px',\n    },\n    li: {\n        'padding-left': '30px',\n    },\n    ol: {\n        'padding-left': '30px',\n    }\n}\n\nclass TicTacToe extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    getNextPlayer() {\n        return this.state.xIsNext? PLAYER_X : PLAYER_O;\n    }\n\n    getStatus(winner) {\n        let status;\n\n        if (RESULT_DRAW === winner) {\n            status = 'Draw!'\n        } else if (winner) {\n            status = 'Winner ' + winner;\n        } else {\n            status = 'Next player: ' + this.getNextPlayer();\n        }\n        return status;\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.getNextPlayer();\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n        const status = this.getStatus(winner);\n\n        const movementsHistory = history.map((step, move) => {\n            const desc = move ?\n              'Go to move #' + move :\n              'Go to game start';\n            return (\n                <li key={move} className={this.props.classes.li}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n        return (\n            <div className={this.props.classes.game}>\n                <div>\n                    <Board\n                        size={BOARD_SIZE_THREE}\n                        squares={current.squares}\n                        onClick={i => this.handleClick(i)}\n                    />\n                </div>\n                <div className={this.props.classes.gameInfo}>\n                    <div className={this.props.classes.status}>{status}</div>\n                    <ol className={this.props.classes.ol}>{movementsHistory}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default injectSheet(stylesheet)(TicTacToe)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicTacToe from './tic-tac-toe.js'\n\nReactDOM.render(\n  <TicTacToe />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}